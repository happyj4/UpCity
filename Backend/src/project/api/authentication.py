from fastapi import APIRouter, Depends, HTTPException, status
from sqlalchemy.orm import Session
from ..db import database
from datetime import datetime, timedelta, timezone
from fastapi.security import OAuth2PasswordBearer, OAuth2PasswordRequestForm
from ..repository import authentication_rep
from ..schemas import utility_company_schemas
get_db = database.get_db

router = APIRouter(tags=['–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è –¥–ª—è | –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ | –ê–¥–º—ñ–Ω–∞ | –ö–ø | üîì'], prefix="/login")


from fastapi.security import OAuth2PasswordRequestForm

@router.post("/", status_code=status.HTTP_200_OK)
def login(request: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(get_db)):
    # Email ‚Äî —ç—Ç–æ username –≤ —Ñ–æ—Ä–º–µ
    email = request.username
    password = request.password
    # –ø–µ—Ä–µ–¥–∞—ë–º –¥–∞–ª—å—à–µ –∫–∞–∫ –≤—Ä—É—á–Ω—É—é —Å–æ–±—Ä–∞–Ω–Ω—ã–π Pydantic –æ–±—ä–µ–∫—Ç
    login_data = utility_company_schemas.LoginAdminCompany(email=email, password=password)
    return authentication_rep.login(db, login_data)
