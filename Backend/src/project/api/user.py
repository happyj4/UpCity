from typing import List, Literal
from fastapi import APIRouter, Depends, status, Query
from ..db import database
from sqlalchemy.orm import Session
from ..schemas import user_schemas
from ..repository import user_rep
from ..db import models
from ..hashing import Hash

get_db = database.get_db

router = APIRouter(tags=['–ö–æ—Ä–∏—Å—Ç—É–≤–∞—áüßî‚Äç‚ôÇÔ∏è'], prefix='/user')

@router.post("/", status_code=status.HTTP_201_CREATED)
def register(request: user_schemas.UserRegister, db:Session = Depends(get_db)):
    return user_rep.register(request, db)



@router.get("/ ",response_model= List[user_schemas.UserShowAll],status_code=status.HTTP_200_OK)
def show_all(db:Session = Depends(get_db)):
    return user_rep.show_all(db)

@router.get("/",response_model= List[user_schemas.UserShowAll],status_code=status.HTTP_200_OK)
def get_users(
    db: Session = Depends(get_db),
    sort_by_subscription: Literal["–ó –ø—ñ–¥–ø–∏—Å–æ–∫–æ—é", "–ë–µ–∑ –ø—ñ–¥–ø–∏—Å–∫–∏", "–ü—Ä–æ—Å—Ä–æ—á–µ–Ω–æ"] | None = Query(None, description="–§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è –∑–∞ –Ω–∞—è–≤–Ω—ñ—Å—Ç—é –ø—ñ–¥–ø–∏—Å–∫–∏"),
    sort_by_rating: Literal["–ó–∞ –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è–º", "–ó–∞ —Å–ø–∞–¥–∞–Ω–Ω—è–º"] | None = Query(None, description="–§—ñ–ª—å—Ç—Ä–∞—Ü—è –∑–∞ —Ä–µ–π—Ç–∏–Ω–≥–æ–º"),
    sort_by_name:  Literal["–ê-–Ø", "–Ø-–ê"] | None = Query(None, description="–§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è –∑–∞ –∞–ª—Ñ–∞–≤—ñ—Ç–æ–º"),
):

    return user_rep.get_users(db, sort_by_subscription=sort_by_subscription, sort_by_rating=sort_by_rating, sort_by_name=sort_by_name)


@router.post("/block/", status_code=status.HTTP_201_CREATED)
def block_user(request: user_schemas.BlockUser, db: Session = Depends(get_db)):
    return user_rep.block_user(request, db)
